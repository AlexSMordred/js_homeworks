

'number' + 3 + 3
// 'number' + 3 конкатенація рядка і числа
// 'number3' + 3 конкатенація рядка і числа
// результат number33


null + 3
// null перетворюється в 0 
// 0 + 3 = 3
// результат 3


5 && "qwerty"
// 5 є істинним (true),"qwerty" також є істинним.
// Всі значення істиноподібні, повертається значення останнього операнда.
// результат qwerty


+'40' + +'2' + "hillel";
// +'40' унарний плюс перетворює рядок '40' у число 
// +'2' унарний плюс перетворює рядок '2' у число
//складання чисел та конкатенація з "hillel"
// результат 42hillel


'10' - 5 === 6;
// операція віднімання перетворює рядок у число 5
// порівняння чисел 5 і 6(вони не рівні)
// результат false


true + false
// true перетворюється в 1,false перетворюється в 0
// 1 + 0 = 1
// результат 1


'4px' - 3
// '4px' не може бути перетворено в число
// операція віднімання з нечисловим значенням повертає NaN
// результат NaN


'4' - 3
// '4' перетворюється в число (4)
// 4 - 3 = 1
// результат 1


'6' + 3 ** 0;
// піднесення до степеня 3 ** 0 = 1 
// конкатенація рядка і числа '6' + 1 = '61'
// результат '61'


12 / '6'
// '6' перетворюється в 6
// 12 / 6 = 2
// результат 2


'10' + (5 === 6);
// 5 === 6 = false
// '10' + false = '10false' конкатенація рядка і логічного значення
// результат '10false'


null == ''
// null порівнюється тільки з undefined під час використання ==
// оскільки null не дорівнює ''
// результат false


3 ** (9 / 3);
// 9 / 3 = 3
// 3 ** 3 = 27
// результат 27


!!'false' == !!'true'
// 'false'строка приводиться до true !!'false' => true
// 'true' строка приводиться до true !!'true' => true
// true == true => true
// результат true


0 || '0' && 1
// 0 є false
// '0' є true
// '0' && 1 => 1 ровертається останній істинний операнд
// 0 || 1 => 1
// результат 1


(+null == false) < 1;
// +null => 0
// 0 == false => true
// true приводиться до 1
// 1 < 1 => false
// результат false


false && true || true
// false && true => false (перший операнд false)
// false || true => true
// результат true


false && (false || true);
// false || true => true
// false && true => false (перший операнд false)
// результат false


(+null == false) < 1 ** 5;
// +null => 0
// 0 == false => true
// true приводиться до 1
// 1 ** 5 => 1 (піднесення до степеня)
// 1 < 1 => false
// результат false
